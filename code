// vim:ft=cpp

#define connect QObject::connect

    auto root = dom.documentElement();
    QDomElement root = dom.documentElement();


    manager.get (QNetworkRequest (QUrl (argv[1])));

    QUrl url (argv[1]);
    QNetworkRequest request (url);
    QNetworkReply *reply = manager.get (request);
    delete reply;


        QDomNode item = nlist.item(i);
//        qDebug() << title.nodeName();
//        qDebug() << title.nodeValue();
//        QTextStream stream (stdout);
//        stream << item;

        QDomNode title = item.namedItem ("title");
        QDomNode n1, n2;
        n1 = title.firstChild();
        n2 = title.lastChild();
        qDebug() << n1.isText();
        qDebug() << n2.isText();

        QDomText txt = n1.toText();
        qDebug() << txt.data();

        /*
        QDomNodeList lst = nlist.item(i).childNodes();
        for (int j=0; j<lst.length(); ++j) {
            QDomNode node = lst.item(j);
            qDebug() << node.nodeName() << "\t"
                     << node.nodeType();
        }
        */



    QTimer::singleShot (1000, &app, SLOT(quit()));

    QTimer timer;
    QObject::connect (&timer, SIGNAL(timeout()), &app, SLOT(quit()));
    timer.start (2000);


    QString s1 = "Hello world!";
    QUrl url ("http://normal.no");


    qDebug ("Hello %s world", "sick");
    QApplication app (argc, argv);
    QUrl url("http://normal.no");

    QNetworkAccessManager manager;
    QNetworkRequest request;
    request.setUrl (url);
    QNetworkReply *reply = manager.get (request);


    MainWindow w;
    w.show();
    return a.exec();


    cout << "\nHello world\n";

    vector<string> args (argv, argv+argc);
    for (auto &e: args)
        cout << e << ", ";
    cout << endl;
